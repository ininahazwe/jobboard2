{% extends 'base.html.twig' %}

{% block title %}EntrepriseOffre{% endblock %}

{% block body %}
    <main id="main">
        <!-- ======= Breadcrumbs ======= -->
        <section id="breadcrumbs" class="breadcrumbs">
            <div class="container">
                <ol>
                    <li><a href="{{ path('app_home') }}">Home</a></li>
                    <li><a href="{{ path('app_profile') }}">Dashboard</a></li>
                    <li><a href="{{ path('modele_offre_commerciale_index') }}">Modèles Offres commerciales</a></li>
                    <li>Modele</li>
                </ol>
                <h1>{{ offre.formule }}</h1>
            </div>
        </section><!-- End Breadcrumbs -->
        <section class="inner-page">
            <div class="container">
                <div class="row">
                    <div class="col-md-3">
                        {% include('layouts/_dash_sidebar.html.twig') %}
                    </div>
                    <div class="col-md-9">
                        <div class="card-body">
                            <form action="{{ path("subscription_paiement", {'id': offre.id }) }}" method="post" id="payment-form">
                                <div class="form-row">
                                    <div id="card-elements"></div>

                                    <script src="https://js.stripe.com/v3/"></script>

                                    <div id="card-errors" role="alert"></div>
                                </div>
                                <button class="btn btn-primary mt-4">
                                    Acheter {{ offre.prix }} €
                                </button>
                            </form>
                        </div>
                        <div class="col">
                            <div class="features-icons-item mx-auto mb-5 mb-lg-0 mb-lg-3">
                                <h3> {{ offre.formule }} </h3>
                                <p>{{ offre.description }}</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </main>
    <style>
        .StripeElement {
            box-sizing: border-box;
            height: 40px;
            width: 100%;
            padding: 10px 12px;
            border: 1px solid transparent;
            border-radius: 4px;
            background-color: white;
            box-shadow: 0 1px 3px 0 #e6ebf1;
            -webkit-transition: box-shadow 150ms ease;
            transition: box-shadow 150ms ease;
        }
        .StripeElement--focus {
            box-shadow: 0 1px 3px 0 #cfd7df;
        }
        .StripeElement--invalid {
            border-color: #0A9B01;
        }
        .StripeElement--webkit-autofill {
            background-color: #fefde5 !important;
        }
    </style>
{% endblock %}

{% block javascripts %}
    <script>
        {% if app_environment == 'dev' %}
        const stripeToken = "{{ stripe_public_key_test }}";
        {% else %}
        const stripeToken = "{{ stripe_public_key_live }}";
        {% endif %}
        const stripe = Stripe(stripeToken);
        const elements = stripe.elements();
        const subscription = "{{ offre.id }}";
        const clientSecret = "{{ intentSecret }}";
        const cardholderName = "{{ app.user.lastname }}";
        const cardholderEmail = "{{ app.user.email }}";
        console.log('clientSecret',clientSecret);
        const styleCustom = {
            base: {
                fontSize: '16px',
                color: '#25332d'
            }
        };
        // Monter notre form a l'objet Stripe
        const card = elements.create('card', {style: styleCustom});
        card.mount("#card-elements");

        //Messages d'erreur
        card.addEventListener('change', function(event){
            const displayError = document.getElementById('card-errors');
            if(event.error) {
                displayError.textContent = event.error.message;
            } else {
                displayError.textContent = '';
            }
        });
        const form = document.getElementById('payment-form');
        form.addEventListener('submit', function(event) {
            event.preventDefault();
            stripe.handleCardPayment(
                    clientSecret,
                    card,
                    {
                        payment_method_data: {
                            billing_details: {
                                name: cardholderName,
                                email: cardholderEmail
                            }
                        }
                    }
            ).then((result) => {
                if(result.error) {
                    // Display error
                } else if('paymentIntent' in result) {
                    console.log('Result : ',result);
                    stripeTokenHandler(result.paymentIntent);
                    console.log('Result paymentIntent : ',result.paymentIntent);
                }
            })
        });
        function stripeTokenHandler(intent) {
            const form = document.getElementById('payment-form');
            const InputIntentId = document.createElement('input');
            const InputIntentPaymentMethod = document.createElement('input');
            const InputIntentStatus = document.createElement('input');
            const InputSubscription = document.createElement('input');

            InputIntentId.setAttribute('type', 'hidden');
            InputIntentId.setAttribute('name', 'stripeIntentId');
            InputIntentId.setAttribute('value', intent.id);

            InputIntentPaymentMethod.setAttribute('type', 'hidden');
            InputIntentPaymentMethod.setAttribute('name', 'stripeIntentPaymentMethod');
            InputIntentPaymentMethod.setAttribute('value', intent.payment_method);

            InputIntentStatus.setAttribute('type', 'hidden');
            InputIntentStatus.setAttribute('name', 'stripeIntentStatus');
            InputIntentStatus.setAttribute('value', intent.status);

            InputSubscription.setAttribute('type', 'hidden');
            InputSubscription.setAttribute('name', 'subscription');
            InputSubscription.setAttribute('value', subscription);

            form.appendChild(InputIntentId);
            form.appendChild(InputIntentPaymentMethod);
            form.appendChild(InputIntentStatus);
            form.appendChild(InputSubscription);

            form.submit();
        }
    </script>
{% endblock %}